name: Release

on:
  push:
    tags: ['*']

jobs:
  codeql:
    name: "CodeQL"
    runs-on: ubuntu-latest
    if: github.repository_owner == 'mangadventure'
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@v1
        with:
          languages: javascript, python
      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v1

  release:
    name: "Create release"
    needs: [codeql]
    runs-on: ubuntu-latest
    if: github.repository_owner == 'mangadventure'
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Verify release version"
        run: >-
          grep -q "__version__ = '${GITHUB_REF_NAME#v}'" MangAdventure/__init__.py &&
          grep -q "@${GITHUB_REF_NAME}#egg=mangadventure\"" docs/install.rst &&
          grep -q "@${GITHUB_REF_NAME}#egg=mangadventure\[" docs/install.rst &&
          grep -q "^${GITHUB_REF_NAME}$" docs/changelog.rst
      - name: "Mark previous prerelease"
        continue-on-error: true
        run: |-
          GH_API="$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases"
          export $(curl -Ssf "$GH_API/latest" | \
            jq -r '"id=\(.id) tag=\(.tag_name)"')
          # skip if the new tag has a different minor version
          : ${GITHUB_REF##*/}; [[ ${_%.*} == ${tag%.*} ]] || exit 0
          curl -Ssf "$GH_API/$id" -o /dev/null -XPATCH \
            -d '{"prerelease":true}' -H "Authorization: Token $GITHUB_TOKEN"
          curl -Ssf "$RTFD_API/mangadventure/versions/$tag/" -XPATCH \
            -d 'active=false' -H "Authorization: Token $RTFD_TOKEN"
        env:
          RTFD_TOKEN: ${{secrets.RTFD_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RTFD_API: https://readthedocs.org/api/v3/projects
      - name: "Parse release body"
        run: make changes > changes.md
        working-directory: ./docs
      - name: "Upload release"
        uses: ncipollo/release-action@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          bodyFile: docs/changes.md
          allowUpdates: true

  docker:
    name: "Build Docker image"
    needs: [codeql]
    runs-on: ubuntu-latest
    if: github.repository_owner == 'mangadventure'
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Log in to the Container registry"
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: "Extract metadata for Docker"
        uses: docker/metadata-action@v4.0.1
        id: meta
        with:
          images: ghcr.io/mangadventure/app
      - name: "Build and push Docker image"
        uses: docker/build-push-action@v3.1.0
        with:
          context: .
          push: true
          file: docker/Dockerfile
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}

  webhook:
    name: "Discord webhook"
    needs: [release]
    runs-on: ubuntu-latest
    if: github.repository_owner == 'mangadventure'
    steps:
      - name: "Send data to Discord"
        env:
          RELEASE_BODY: ${{github.event.release.body}}
          RELEASE_NAME: ${{github.event.release.tag_name}}
          RELEASE_WEBHOOK: ${{secrets.RELEASE_WEBHOOK}}
        run: |-
          jq --arg name "$GITHUB_ACTOR" \
             --arg author_url "$GITHUB_SERVER_URL/$GITHUB_ACTOR" \
             --arg icon_url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY_OWNER.png?s=40" \
             --arg title "New release published: $RELEASE_NAME" \
             --arg url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/$RELEASE_NAME" \
             --arg description "$RELEASE_BODY" \
             -Mn '{
               username: "GitHub",
               avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
               embeds: [{author: {$name, $icon_url, url: $author_url}, $url, $title, $description}]
             }' | curl -d@- -Ssf "$RELEASE_WEBHOOK" -H 'Content-Type: application/json' \
                       -A "GitHub-Actions ($GITHUB_SERVER_URL/$GITHUB_REPOSITORY, v0.1)"
